{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/ContactComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","isLoading","errMess","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","bind","values","this","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","href","role","model","onSubmit","htmlFor","md","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","type","color","Component","RenderDish","in","transformProps","exitTransform","top","description","CommentForm","toggleModal","setState","isModalOpen","state","postComment","dishId","rating","author","comment","outline","onClick","isOpen","toggle","defaultValue","RenderComments","comments","commentlist","data","key","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","Header","toggleNav","isNavOpen","handleLogin","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","height","navbar","innerRef","input","Footer","RenderCard","item","undefined","designation","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leadersLoading","leaderErrMess","RenderLeader","tag","left","middle","object","body","heading","About","leaders","i","title","list","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","dishErrMess","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","addComment","catch","console","log","actions","reset","newFeedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.96b47285.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <div className=\"col-12\">\r\n      <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n      <p>Loading . . .</p>\r\n    </div>\r\n  );\r\n};\r\n","export const baseUrl = 'http://localhost:3001/';\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nconst RenderMenuItem = ({ dish }) => {\r\n  return (\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n        <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardImgOverlay>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n        </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst Menu = (props) => {\r\n  const menu = props.dishes.dishes.map((dish) => {\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <RenderMenuItem dish={dish} />\r\n      </div>\r\n    );\r\n  });\r\n  if (props.dishes.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dishes.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h4>{props.dishes.errMess}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Menu</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">{menu}</div>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Label,\r\n  Col,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, Form, Errors } from 'react-redux-form';\r\n//actions\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    this.props.postFeedback(\r\n      values.firstname,\r\n      values.lastname,\r\n      values.telnum,\r\n      values.email,\r\n      values.agree,\r\n      values.contactType,\r\n      values.message\r\n    );\r\n    this.props.resetFeedbackForm();\r\n    // event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{' '}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\" href=\"/#\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\" //only show when the field is touched\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Tel. Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 numbers',\r\n                      maxLength: 'Must be 15 numbers or less',\r\n                      isNumber: 'Must be a number',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: 'Required',\r\n                      validEmail: 'Invalid Email Address',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{' '}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  Col,\r\n  Row,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { Control, LocalForm, Errors } from 'react-redux-form';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n//! Animations\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nfunction RenderDish({ dish }) {\r\n  if (dish != null)\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <FadeTransform\r\n          in\r\n          transformProps={{\r\n            exitTransform: 'scale(0.5) translateY(-50%)',\r\n          }}\r\n        >\r\n          <Card>\r\n            <CardImg\r\n              top\r\n              width=\"100%\"\r\n              src={baseUrl + dish.image}\r\n              alt={dish.name}\r\n            />\r\n            <CardBody>\r\n              <CardTitle>{dish.name}</CardTitle>\r\n              <CardText>{dish.description}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n        </FadeTransform>\r\n      </div>\r\n    );\r\n  else return <div></div>;\r\n}\r\n\r\nclass CommentForm extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(\r\n      this.props.dishId,\r\n      values.rating,\r\n      values.author,\r\n      values.comment\r\n    );\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil fa-lg\"></span> Submit Comment\r\n        </Button>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Label htmlFor=\"rating\">Rating</Label>\r\n                </Col>\r\n                <Col md={12}>\r\n                  <Control.select\r\n                    model=\".rating\"\r\n                    name=\"rating\"\r\n                    className=\"form-control\"\r\n                    defaultValue=\"1\"\r\n                  >\r\n                    <option>1</option>\r\n                    <option>2</option>\r\n                    <option>3</option>\r\n                    <option>4</option>\r\n                    <option>5</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Label htmlFor=\"author\">Your name</Label>\r\n                </Col>\r\n                <Col md={12}>\r\n                  <Control.text\r\n                    model=\".author\"\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    placeholder=\"Your name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".author\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less',\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Label htmlFor=\"comment\">Comment</Label>\r\n                </Col>\r\n                <Col md={12}>\r\n                  <Control.textarea\r\n                    model=\".comment\"\r\n                    id=\"comment\"\r\n                    name=\"comment\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RenderComments = ({ comments, postComment, dishId }) => {\r\n  if (comments != null) {\r\n    const commentlist = comments.map((data) => (\r\n      <Fade in>\r\n        <li key={data.id}>\r\n          <p>{data.comment}</p>\r\n          <p>\r\n            -- {data.author},{' '}\r\n            <span>\r\n              {new Intl.DateTimeFormat('en-US', {\r\n                year: 'numeric',\r\n                month: 'short',\r\n                day: '2-digit',\r\n              }).format(new Date(Date.parse(data.date)))}\r\n            </span>\r\n          </p>\r\n        </li>\r\n      </Fade>\r\n    ));\r\n    return (\r\n      <div className=\"col-12 col-md-5 m-1\">\r\n        <h4> Comments </h4>\r\n        <ul className=\"list-unstyled\">\r\n          <Stagger in>{commentlist}</Stagger>\r\n        </ul>\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  } else return <div></div>;\r\n};\r\n\r\nconst DishDetail = (props) => {\r\n  const { dish, comments, isLoading, errMess } = props;\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <RenderDish dish={dish} />\r\n          <RenderComments\r\n            comments={comments}\r\n            postComment={props.postComment}\r\n            dishId={props.dish.id}\r\n            //dish is available because it cause the render\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nexport default DishDetail;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  Nav,\r\n  Navbar,\r\n  NavbarBrand,\r\n  NavbarToggler,\r\n  Collapse,\r\n  NavItem,\r\n  Jumbotron,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Label,\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isNavOpen: false,\r\n      isModalOpen: false,\r\n    };\r\n  }\r\n\r\n  //I tuen toggleNav & toggleModal into a arrow function that's why didn't need\r\n  //bind(this)\r\n\r\n  toggleNav = () => {\r\n    this.setState({\r\n      isNavOpen: !this.state.isNavOpen,\r\n    });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  };\r\n\r\n  handleLogin = (event) => {\r\n    this.toggleModal();\r\n    alert(\r\n      'Username: ' +\r\n        this.username.value +\r\n        ' Password: ' +\r\n        this.password.value +\r\n        ' Remember: ' +\r\n        this.remember.checked\r\n    );\r\n    event.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar dark expand=\"md\">\r\n          <div className=\"container\">\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className=\"mr-auto\" href=\"/\">\r\n              <img\r\n                src=\"assets/images/logo.png\"\r\n                height=\"30\"\r\n                width=\"41\"\r\n                alt=\"Ristorante Con Fusion\"\r\n              />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n              <Nav navbar>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/home\">\r\n                    <span className=\"fa fa-home fa-lg\"></span> Home\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                    <span className=\"fa fa-info fa-lg\"></span> About Us\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/menu\">\r\n                    <span className=\"fa fa-list fa-lg\"></span> Menu\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                    <span className=\"fa fa-address-card fa-lg\"></span> Contact\r\n                    Us\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n              <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                  <Button outline onClick={this.toggleModal}>\r\n                    <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                  </Button>\r\n                </NavItem>\r\n              </Nav>\r\n            </Collapse>\r\n          </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n          <div className=\"container\">\r\n            <div className=\"row row-header\">\r\n              <div className=\"col-12 col-sm-6\">\r\n                <h1>Ristorante con Fusion</h1>\r\n                <p>\r\n                  We take inspiration from the World's best cuisines, and create\r\n                  a unique fusion experience. Our lipsmacking creations will\r\n                  tickle your culinary senses!\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n          <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n              <FormGroup>\r\n                <Label htmlFor=\"username\">Username</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  id=\"username\"\r\n                  name=\"username\"\r\n                  innerRef={(input) => (this.username = input)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label htmlFor=\"password\">Password</Label>\r\n                <Input\r\n                  type=\"password\"\r\n                  id=\"password\"\r\n                  name=\"password\"\r\n                  innerRef={(input) => (this.password = input)}\r\n                />\r\n              </FormGroup>\r\n              <FormGroup check>\r\n                <Label check>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    name=\"remember\"\r\n                    innerRef={(input) => (this.remember = input)}\r\n                  />\r\n                  Remember me\r\n                </Label>\r\n              </FormGroup>\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                Login\r\n              </Button>\r\n            </Form>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-4 offset-1 col-sm-2\">\r\n            <h5>Links</h5>\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <Link to=\"/home\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/aboutus\">About Us</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/menu\">Menu</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/contactus\">Contact Us</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-7 col-sm-5\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope fa-lg\"></i>:{' '}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 align-self-center\">\r\n            <div className=\"text-center\">\r\n              <a\r\n                className=\"btn btn-social-icon btn-google\"\r\n                href=\"http://google.com/+\"\r\n              >\r\n                <i className=\"fa fa-google-plus\"></i>\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-facebook\"\r\n                href=\"http://www.facebook.com/profile.php?id=\"\r\n              >\r\n                <i className=\"fa fa-facebook\"></i>\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-linkedin\"\r\n                href=\"http://www.linkedin.com/in/\"\r\n              >\r\n                <i className=\"fa fa-linkedin\"></i>\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-twitter\"\r\n                href=\"http://twitter.com/\"\r\n              >\r\n                <i className=\"fa fa-twitter\"></i>\r\n              </a>\r\n              <a\r\n                className=\"btn btn-social-icon btn-google\"\r\n                href=\"http://youtube.com/\"\r\n              >\r\n                <i className=\"fa fa-youtube\"></i>\r\n              </a>\r\n              <a className=\"btn btn-social-icon\" href=\"mailto:\">\r\n                <i className=\"fa fa-envelope-o\"></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-auto\">\r\n            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n} from 'reactstrap';\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n//! Animations\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else if (item === undefined) {\r\n    return <h4>item:undefined</h4>;\r\n  } else\r\n    return (\r\n      <FadeTransform\r\n        in\r\n        transformProps={{\r\n          exitTransform: 'scale(0.5) translateY(-50%)',\r\n        }}\r\n      >\r\n        <Card>\r\n          <CardImg src={baseUrl + item.image} alt={item.name} />\r\n          <CardBody>\r\n            <CardTitle>{item.name}</CardTitle>\r\n            {item.designation ? (\r\n              <CardSubtitle>{item.designation}</CardSubtitle>\r\n            ) : null}\r\n            <CardText>{item.description}</CardText>\r\n          </CardBody>\r\n        </Card>\r\n      </FadeTransform>\r\n    );\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishesErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.promotion}\r\n            isLoading={props.promoLoading}\r\n            errMess={props.promoErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.leader}\r\n            isLoading={props.leadersLoading}\r\n            errMess={props.leaderErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Stagger } from 'react-animation-components';\r\n\r\nconst RenderLeader = ({ leader, errMess }) => {\r\n  if (errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (leader != null) {\r\n    return (\r\n      <Media className=\"col-12 mt-5\" tag=\"li\">\r\n        <Media left middle>\r\n          <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n        </Media>\r\n        <Media body className=\"col-12\">\r\n          <Media heading>{leader.name}</Media>\r\n          <p>{leader.designation}</p>\r\n          <p>{leader.description}</p>\r\n        </Media>\r\n      </Media>\r\n    );\r\n  } else return null;\r\n};\r\n\r\nfunction About(props) {\r\n  const { leaderErrMess } = props;\r\n  const leaders = props.leaders.leaders.map((leader, i) => {\r\n    return <RenderLeader key={i} leader={leader} errMess={leaderErrMess} />;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to=\"/home\">Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className=\"col-12\">\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{' '}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className=\"col-12 col-md-5\">\r\n          <Card>\r\n            <CardHeader className=\"bg-primary text-white\">\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className=\"row p-1\">\r\n                <dt className=\"col-6\">Started</dt>\r\n                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                <dd className=\"col-6\">$1,250,375</dd>\r\n                <dt className=\"col-6\">Employees</dt>\r\n                <dd className=\"col-6\">40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Card>\r\n            <CardBody className=\"bg-faded\">\r\n              <blockquote className=\"blockquote\">\r\n                <p className=\"mb-0\">\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className=\"blockquote-footer\">\r\n                  Yogi Berra,\r\n                  <cite title=\"Source Title\">\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className=\"row row-content\">\r\n        <div className=\"col-12\">\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n\r\n        <div className=\"col-12\">\r\n          <Media list>\r\n            <Stagger in>{leaders}</Stagger>\r\n          </Media>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n// !Actions\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment,\r\n});\r\n\r\nexport const addFeedback = (feedback) => ({\r\n  type: ActionTypes.ADD_FEEDBACK,\r\n  payload: feedback,\r\n});\r\n\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n  const newComment = {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment,\r\n  };\r\n  newComment.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + 'comments', {\r\n    method: 'POST',\r\n    body: JSON.stringify(newComment),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'same-origin',\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addComment(response)))\r\n    .catch((error) => {\r\n      console.log('post comments', error.message);\r\n      alert('Your comment could not be posted\\nError: ' + error.message);\r\n    });\r\n};\r\n\r\nexport const fetchDishes = () => (dispatch) => {\r\n  dispatch(dishesLoading(true));\r\n  return fetch(baseUrl + 'dishes')\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      //manually handle error if the server didn't response\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((dishes) => dispatch(addDishes(dishes)))\r\n    .catch((error) => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\nexport const dishesLoading = () => ({\r\n  type: ActionTypes.DISHES_LOADING,\r\n});\r\n\r\nexport const dishesFailed = (errmess) => ({\r\n  type: ActionTypes.DISHES_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addDishes = (dishes) => ({\r\n  type: ActionTypes.ADD_DISHES,\r\n  payload: dishes,\r\n});\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n  return fetch(baseUrl + 'comments')\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((comments) => dispatch(addComments(comments)))\r\n    .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmess) => ({\r\n  type: ActionTypes.COMMENTS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addComments = (comments) => ({\r\n  type: ActionTypes.ADD_COMMENTS,\r\n  payload: comments,\r\n});\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n  dispatch(promosLoading());\r\n\r\n  return fetch(baseUrl + 'promotions')\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((promos) => dispatch(addPromos(promos)))\r\n    .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n  type: ActionTypes.PROMOS_LOADING,\r\n});\r\n\r\nexport const promosFailed = (errmess) => ({\r\n  type: ActionTypes.PROMOS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n  type: ActionTypes.ADD_PROMOS,\r\n  payload: promos,\r\n});\r\n\r\nexport const fetchLeaders = () => (dispatch) => {\r\n  dispatch(leadersLoading(true));\r\n  return fetch(baseUrl + 'leaders')\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      //manually handle error if the server didn't response\r\n      (error) => {\r\n        var errmess = new Error(error.message);\r\n        throw errmess;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((leaders) => dispatch(addLeaders(leaders)))\r\n    .catch((error) => dispatch(leadersFailed(error.message)));\r\n};\r\n\r\nexport const leadersLoading = () => ({\r\n  type: ActionTypes.LEADERS_LOADING,\r\n});\r\n\r\nexport const leadersFailed = (errmess) => ({\r\n  type: ActionTypes.LEADERS_FAILED,\r\n  payload: errmess,\r\n});\r\n\r\nexport const addLeaders = (leaders) => ({\r\n  type: ActionTypes.ADD_LEADERS,\r\n  payload: leaders,\r\n});\r\n\r\nexport const postFeedback = (\r\n  firstname,\r\n  lastname,\r\n  telnum,\r\n  email,\r\n  agree,\r\n  contactType,\r\n  message\r\n) => (dispatch) => {\r\n  const newFeedback = {\r\n    firstname: firstname,\r\n    lastname: lastname,\r\n    telnum: telnum,\r\n    email: email,\r\n    agree: agree,\r\n    contactType: contactType,\r\n    message: message,\r\n  };\r\n  newFeedback.date = new Date().toISOString();\r\n\r\n  return fetch(baseUrl + 'feedback', {\r\n    method: 'POST',\r\n    body: JSON.stringify(newFeedback),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'same-origin',\r\n  })\r\n    .then(\r\n      (response) => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error(\r\n            'Error ' + response.status + ': ' + response.statusText\r\n          );\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      (error) => {\r\n        throw error;\r\n      }\r\n    )\r\n    .then((response) => response.json())\r\n    .then((response) => dispatch(addFeedback(response)))\r\n    .then((response) => alert(JSON.stringify(response)))\r\n    .catch((error) => {\r\n      console.log('post feedback', error.message);\r\n      alert('Your feedback could not be posted\\nError: ' + error.message);\r\n    });\r\n};\r\n","export const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\n\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\n\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\n\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\n","import React, { Component } from 'react';\r\n//! component\r\nimport Menu from './MenuComponent';\r\nimport Contact from './ContactComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Home from './HomeComponent';\r\nimport About from './AboutComponent';\r\n\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\n//! bring actions\r\nimport {\r\n  postComment,\r\n  fetchDishes,\r\n  fetchComments,\r\n  fetchPromos,\r\n  fetchLeaders,\r\n  postFeedback,\r\n} from '../redux/ActionCreators';\r\nimport { actions } from 'react-redux-form';\r\n\r\n// ! Animations\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nclass Main extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render() {\r\n    const HomePage = () => {\r\n      return (\r\n        <Home\r\n          //As we use middleware so there is no longer exit props.dishes\r\n          dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishErrMess={this.props.dishes.errMess}\r\n          promotion={\r\n            this.props.promotions.promotions.filter(\r\n              (promo) => promo.featured\r\n            )[0]\r\n          }\r\n          promoLoading={this.props.promotions.isLoading}\r\n          promoErrMess={this.props.promotions.errMess}\r\n          //without go through reducer\r\n          leader={\r\n            this.props.leaders.leaders.filter((leader) => leader.featured)[0]\r\n          }\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leaderErrMess={this.props.leaders.errMess}\r\n        />\r\n      );\r\n    };\r\n\r\n    const DishWithId = ({ match }) => {\r\n      return (\r\n        <DishDetail\r\n          dish={\r\n            this.props.dishes.dishes.filter(\r\n              (dish) => dish.id === parseInt(match.params.dishId, 10)\r\n            )[0]\r\n          }\r\n          isLoading={this.props.dishes.isLoading}\r\n          errMess={this.props.dishes.errMess}\r\n          comments={this.props.comments.comments.filter(\r\n            (comment) => comment.dishId === parseInt(match.params.dishId, 10)\r\n          )}\r\n          commentsErrMess={this.props.comments.errMess}\r\n          postComment={this.props.postComment}\r\n        />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={this.props.location.key}\r\n            classNames=\"page\"\r\n            timeout={300}\r\n          >\r\n            <Switch>\r\n              <Route path=\"/home\" component={HomePage} />\r\n              <Route\r\n                exact\r\n                path=\"/aboutus\"\r\n                component={() => (\r\n                  <About\r\n                    leaders={this.props.leaders}\r\n                    leaderErrMess={this.props.leaders.errMess}\r\n                  />\r\n                )}\r\n              />\r\n              <Route\r\n                exact\r\n                path=\"/menu\"\r\n                component={() => <Menu dishes={this.props.dishes} />}\r\n              />\r\n              <Route path=\"/menu/:dishId\" component={DishWithId} />\r\n              <Route\r\n                exact\r\n                path=\"/contactus\"\r\n                component={() => (\r\n                  <Contact\r\n                    resetFeedbackForm={this.props.resetFeedbackForm}\r\n                    postFeedback={this.props.postFeedback}\r\n                  />\r\n                )}\r\n              />\r\n              <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dishes: state.dishes,\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)),\r\n  //Redux-thunk\r\n  fetchDishes: () => {\r\n    dispatch(fetchDishes());\r\n  },\r\n  resetFeedbackForm: () => {\r\n    dispatch(actions.reset('feedback'));\r\n  },\r\n  fetchComments: () => dispatch(fetchComments()),\r\n  fetchPromos: () => dispatch(fetchPromos()),\r\n  fetchLeaders: () => dispatch(fetchLeaders()),\r\n  postFeedback: (\r\n    firstname,\r\n    lastname,\r\n    telnum,\r\n    email,\r\n    agree,\r\n    contactType,\r\n    message\r\n  ) =>\r\n    dispatch(\r\n      postFeedback(\r\n        firstname,\r\n        lastname,\r\n        telnum,\r\n        email,\r\n        agree,\r\n        contactType,\r\n        message\r\n      )\r\n    ),\r\n});\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n\r\n// withRouter: Create a new component that is \"connected\" (to borrow redux\r\n// terminology) to the router.\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Dishes = (\r\n  state = { isLoading: true, errMess: null, dishes: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_DISHES:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        dishes: action.payload,\r\n      };\r\n\r\n    case ActionTypes.DISHES_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, dishes: [] };\r\n\r\n    case ActionTypes.DISHES_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Comments = (\r\n  state = {\r\n    errMess: null,\r\n    comments: [],\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return { ...state, errMess: null, comments: action.payload };\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return { ...state, errMess: action.payload };\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n      var comment = action.payload;\r\n      return { ...state, comments: state.comments.concat(comment) };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (\r\n  state = { isLoading: true, errMess: null, promotions: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PROMOS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        promotions: action.payload,\r\n      };\r\n\r\n    case ActionTypes.PROMOS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, promotions: [] };\r\n\r\n    case ActionTypes.PROMOS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Leaders = (\r\n  state = { isLoading: true, errMess: null, leaders: [] },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errMess: null,\r\n        leaders: action.payload,\r\n      };\r\n\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, errMess: null, leaders: [] };\r\n\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return { ...state, isLoading: false, errMess: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const InitialFeedback = {\r\n  firstname: '',\r\n  lastname: '',\r\n  telnum: '',\r\n  email: '',\r\n  agree: false,\r\n  contactType: 'Tel.',\r\n  message: '',\r\n};\r\n\r\nexport const Feedback = (state = InitialFeedback, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_FEEDBACK:\r\n      var feedback = action.payload;\r\n      return { ...state, feedbacks: state.feedback.concat(feedback) };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { Component } from 'react';\r\nimport Main from './components/MainComponent';\r\nimport './App.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { ConfigureStore } from './redux/configureStore';\r\n\r\nconst store = ConfigureStore();\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <BrowserRouter>\r\n          <div className=\"App\">\r\n            <Main />\r\n          </div>\r\n        </BrowserRouter>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { Dishes } from './dishes';\r\nimport { Comments } from './comments';\r\nimport { Promotions } from './promotions';\r\nimport { Leaders } from './leaders';\r\n//! create formState\r\nimport { InitialFeedback } from './forms';\r\nimport { createForms } from 'react-redux-form';\r\n//! middleware\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\n\r\nexport const ConfigureStore = () => {\r\n  const store = createStore(\r\n    combineReducers({\r\n      dishes: Dishes,\r\n      comments: Comments,\r\n      promotions: Promotions,\r\n      leaders: Leaders,\r\n      ...createForms({\r\n        feedback: InitialFeedback,\r\n      }),\r\n    }),\r\n    applyMiddleware(thunk, logger)\r\n  );\r\n\r\n  return store;\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'font-awesome/css/font-awesome.css';\r\nimport 'bootstrap-social/bootstrap-social.css';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}